{"uid":"9b7b87c836686209","name":"Appointment Pre deployment testing","fullName":"Selenium Project.Deployment.Pre_Deployment.Pre Deployment_Walkin_Appointment_test#test_walkin_appointment","historyId":"496ddf7fe536aff18c1718ddadb749bd","time":{"start":1757673679271,"stop":1757674434042,"duration":754771},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff705b9fc95+79861]\n\tGetHandleVerifier [0x0x7ff705b9fcf0+79952]\n\t(No symbol) [0x0x7ff70591cada]\n\t(No symbol) [0x0x7ff705974457]\n\t(No symbol) [0x0x7ff70597471c]\n\t(No symbol) [0x0x7ff7059c8217]\n\t(No symbol) [0x0x7ff70599cb1f]\n\t(No symbol) [0x0x7ff7059c4f8b]\n\t(No symbol) [0x0x7ff70599c8b3]\n\t(No symbol) [0x0x7ff705965272]\n\t(No symbol) [0x0x7ff705966043]\n\tGetHandleVerifier [0x0x7ff705e5b9cd+2946349]\n\tGetHandleVerifier [0x0x7ff705e55c4a+2922410]\n\tGetHandleVerifier [0x0x7ff705e759d7+3052855]\n\tGetHandleVerifier [0x0x7ff705bbaa7e+189918]\n\tGetHandleVerifier [0x0x7ff705bc2a1f+222591]\n\tGetHandleVerifier [0x0x7ff705ba8ab4+116244]\n\tGetHandleVerifier [0x0x7ff705ba8c69+116681]\n\tGetHandleVerifier [0x0x7ff705b8f048+11176]\n\tBaseThreadInitThunk [0x0x7ff8bbcee8d7+23]\n\tRtlUserThreadStart [0x0x7ff8bc8e8d9c+44]","statusTrace":"login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"62239efe39c1b20bc55426c9e4ec56ff\")>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Appointment Pre deployment testing\")\n    @pytest.mark.parametrize(\"url, username, password\", [(scale_url, main_scale, password)])\n    def test_walkin_appointment(login):\n    \n        current_date = datetime.now().strftime(\"%Y-%m-%d\")\n        print(\"Pre-Deployment Provider Appointment : \",current_date)\n        try:\n    \n            time.sleep(5)\n            print(\"New patient create\")\n    \n            wait_and_click(login, By.XPATH, \"//div[contains(@class, 'font-small') and contains(text(),'Appointments')]\")\n    \n            time.sleep(3)\n    \n            wait_and_click(login, By.XPATH, \"//div[contains(@class, 'my-1') and .//span[text()='Appointment']]\")\n    \n            time.sleep(3)\n            print(\"Create new patient\")\n    \n            wait_and_click(login, By.XPATH, \"//b[normalize-space()='Create New Patient']\")\n    \n            login.implicitly_wait(3)\n            first_name, last_name, cons_manual_id, phonenumber, email = create_user_data()\n    \n            wait_and_send_keys(login, By.XPATH, \"//input[@id='first_name']\", str(first_name))\n            wait_and_send_keys(login, By.XPATH, \"//input[@id='last_name']\", str(last_name))\n            wait_and_send_keys(login, By.XPATH, \"//*[@id='customer_id']\", cons_manual_id)\n            wait_and_send_keys(login, By.XPATH, \"//*[@id='phone']\", phonenumber)\n            wait_and_send_keys(login, By.XPATH, \"//ngx-intl-tel-input[@name='whatsApp']//input[@id='phone']\", phonenumber)\n            wait_and_send_keys(login, By.XPATH, \"//input[@id='email_id']\", email)\n            wait_and_click(login, By.XPATH, \"//span[contains(text(),'Save')]\")\n    \n            time.sleep(5)\n    \n            wait_and_click(login, By.CSS_SELECTOR, \"p-dropdown[optionlabel='place']\")\n            wait_and_visible_click (login, By.XPATH, \"(//li[@id='p-highlighted-option'])[1]\")\n    \n            print(\"location : Chavakkad\")\n            login.implicitly_wait(5)\n    \n            wait_and_locate_click(login, By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[2]\")\n    \n            login.implicitly_wait(5)\n            wait_and_visible_click(login, By.XPATH, \"(//li[@aria-label='ENT'])[1]\")\n    \n            print(\"Department : ENT\")\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n    \n            wait_and_click(login, By.XPATH, user_dropdown_xpath)\n    \n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            wait_and_click(login, By.XPATH, user_option_xpath)\n            print(\"Select user : Naveen\")\n    \n            time.sleep(3)\n            service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element= login.find_element(By.XPATH, service_dropdown_xpath)\n            scroll_to_element(login, element)\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.element_to_be_clickable((By.XPATH, service_option_xpath))\n            # ).click()\n    \n            wait_and_locate_click(login, By.XPATH, service_option_xpath)\n    \n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n    \n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n    \n            click_to_element(login, Today_Date)\n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            click_to_element(login, time_slot)\n    \n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Confirm']\")\n            time.sleep(4)\n    \n            # WebDriverWait(login, 15).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//img[@src='./assets/images/menu/settings.png']\"))\n            # ).click()\n    \n    \n            # fea_cust = login.find_element(By.XPATH, \"//div[normalize-space()='Features and Customization']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", fea_cust)\n    \n            # time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Custom Fields']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Label']\"))\n            # ).click()\n    \n            # label_name1 = \"Label\" + str(uuid.uuid1())[:3]\n            # label_namebox1 = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, \"//input[@id='displayName']\"))\n            # )\n            # label_namebox1.clear()\n            # label_namebox1.send_keys(label_name1)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='mdc-button__label']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\"))\n            # ).click()\n    \n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//body/app-root[1]/app-business[1]/div[1]/app-sidebar-menu[1]/div[1]/div[2]/div[1]/ul[1]/li[2]/a[1]/div[1]/span[1]/span[1]/img[1]\")\n    \n            time.sleep(2)\n            element =wait.until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'my-1') and .//span[text()='Appointment']]\",\n                    )\n                )\n            )\n            click_to_element(login, element)\n    \n            wait_and_send_keys(login, By.XPATH, \"//input[@placeholder='Enter name or phone or id']\", \"9207206005\")\n            time.sleep(2)\n            login.implicitly_wait(5)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Id : 2']\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.CSS_SELECTOR, \"p-dropdown[optionlabel='place']\")\n    \n            login.find_element(By.XPATH, \"(//li[@id='p-highlighted-option'])[1]\").click()\n            print(\"location : Chavakkad\")\n            login.implicitly_wait(5)\n    \n            login.find_element(\n                By.CSS_SELECTOR, \"p-dropdown[optionlabel='departmentName']\"\n            ).click()\n            login.implicitly_wait(5)\n            login.find_element(By.XPATH, \"(//li[@aria-label='ENT'])[1]\").click()\n            print(\"Department : ENT\")\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n            wait_and_click(login, By.XPATH, user_dropdown_xpath)\n    \n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            wait_and_click(login, By.XPATH, user_option_xpath)\n    \n            print(\"Select user : Naveen\")\n    \n            # service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element = login.find_element(By.XPATH, \"//p-dropdown[@optionlabel='name']\")\n            scroll_to_element(login, element)\n            time.sleep(2)\n            element.click()\n    \n            # service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            time.sleep(3)\n            service_option = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, (\"//li[@aria-label='Naveen Consultation']//div[1]\")))\n            )\n            click_to_element(login, service_option)\n            # login.execute_script(\"arguments[0].click();\", service_option)\n    \n    \n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n            time.sleep(2)\n            click_to_element(login, Today_Date)\n    \n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            wait_and_locate_click(login, By.XPATH, \"//a[contains(text(),'Notes')]\")\n    \n            login.find_element(By.XPATH, \"//textarea[@id='message']\").send_keys(\"Note for the walkin appointment\")\n    \n            wait_and_visible_click(login, By.XPATH, \"//span[normalize-space()='Save']\")\n    \n            print(\"Note added for walkin appointment\")\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Upload File']\")\n    \n            time.sleep(4)\n           # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n            print(\"Successfully upload the file\")\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'Confirm')]\")\n            message = get_snack_bar_message(login)\n            print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n    \n            #************************************** Apply Label ***********************************************\n    \n            # time.sleep(3)\n            # more_actions_button = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='More Actions']\")\n            #     )\n            # )\n            # more_actions_button.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Apply Labels']\"))\n            # ).click()\n    \n            # login.implicitly_wait(5)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Create New']\"))\n            # ).click()\n    \n            # label_name = \"Label\" + str(uuid.uuid1())[:3]\n            # label_namebox = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, \"//input[@id='displayName']\"))\n            # )\n            # label_namebox.clear()\n            # label_namebox.send_keys(label_name)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Create']\"))\n            # ).click()\n    \n            # label_xpath = f\"//label[normalize-space()='{label_name}']\"\n    \n            # # Wait for the label to appear and click on it\n            # label = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, label_xpath))\n            # )\n            # login.execute_script(\"arguments[0].scrollIntoView();\", label_xpath)\n            # label.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Apply']\"))\n            # ).click()\n    \n            # Selected_label = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #         (By.XPATH, label_xpath))\n            # )\n    \n            # # Get the text of the confirmation message\n            # actual_label = Selected_label.text\n            # print(\"Selected Label:\", actual_label)\n    \n            # # Assert the expected text\n            # expected_label = Selected_label.text\n            # assert (\n            #     actual_label == expected_label\n            # ), f\"Expected '{expected_label}', but got '{actual_label}'\"\n    \n            # # Applying Filter\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\"))\n            # ).click()\n    \n            # login.implicitly_wait(5)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//i[@class='pi pi-filter-fill']\"))\n            # ).click()\n    \n            # time.sleep(3)\n            # Label_filter = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[contains(text(),'Labels')]\"))\n            # )\n            # login.execute_script(\"arguments[0].scrollIntoView();\", Label_filter)\n            # Label_filter.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//div[contains(text(),'Select Labels')]\"))\n            # ).click()\n    \n            # time.sleep(3)\n    \n            #  # Wait for the list to be visible\n            # WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.XPATH, \"//ul[@role='listbox']\"))\n            # )\n    \n            # # Locate all the list items\n            # list_items = WebDriverWait(login, 10).until(\n            #     EC.presence_of_all_elements_located((By.XPATH, \"//ul[@role='listbox']//li\"))\n            # )\n    \n            # # Get the last item in the list\n            # last_item = list_items[-1]\n    \n            # # Initialize ActionChains\n            # actions = ActionChains(login)\n    \n            # # Move to the last item and click it\n            # actions.move_to_element(last_item).click().perform()\n    \n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//timesicon[@class='p-element p-icon-wrapper ng-star-inserted']//*[name()='svg']//*[name()='path' and contains(@d,'M8.01186 7')]\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[contains(text(),'Apply')]\"))\n            # ).click()\n    \n            # time.sleep(3)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')]\"))\n            #     ).click()\n    \n            # time.sleep(3)\n            # assert (\n            #     actual_label == expected_label\n            # ), f\"Expected '{expected_label}', but got '{actual_label}'\"\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//i[@class='pi pi-filter-fill']\"))\n            # ).click()\n    \n            # time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Reset']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//timesicon[contains(@class, 'p-element') and contains(@class, 'p-icon-wrapper') and contains(@class, 'ng-star-inserted')]//*[contains(@class, 'p-icon')]\"))\n            # ).click()\n    \n            # time.sleep(2)\n            # login.refresh()\n    \n            # # time.sleep(5)\n            # while True:\n            #     try:\n            #         # Attempt to locate the \"Next\" button using the button's class\n            #         next_button = WebDriverWait(login, 10).until(\n            #             EC.presence_of_element_located(\n            #                 (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n            #             )\n            #         )\n    \n            #         # Check if the button is enabled (i.e., not disabled)\n            #         if next_button.is_enabled():\n            #             # print(\"Next button found and clickable.\")\n            #             # Click using JavaScript to avoid interception issues\n            #             login.execute_script(\"arguments[0].click();\", next_button)\n            #         else:\n            #             # print(\"Next button is disabled. Reached the last page.\")\n            #             break\n    \n            #     except Exception as e:\n            #         # # If no next button is found or any other exception occurs, exit the loop\n            #         # print(\"End of pages or error encountered:\", e)\n            #         break\n    \n            # # After clicking through all pages, locate and click the last accordion\n            # time.sleep(3)\n            # last_element_in_accordian = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            # )\n            # last_element_in_accordian.click()\n    \n            time.sleep(3)\n            more_actions_button = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='More Actions']\")\n                )\n            )\n            click_to_element(login, more_actions_button)\n    \n    \n    \n    \n            # ****************************** Send Message **********************************************\n    \n            time.sleep(3)\n            message_button = WebDriverWait(login, 15).until(\n            EC.presence_of_element_located(\n            (By.XPATH, \"//button[normalize-space()='Send Message']\"))\n            )\n            click_to_element(login, message_button)\n    \n            time.sleep(2)\n            wait_and_send_keys(login, By.XPATH, \"//textarea[@id='messageData']\", \"Send Message to the Patient\")\n    \n            time.sleep(3)\n            wait_and_click(login, By.XPATH, \"//label[normalize-space()='Click here to select the files']\")\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(4)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'send')]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            # ******************* Send Attachment ************************\n            time.sleep(5)\n            wait_and_visible_click(login, By.XPATH, \"//button[normalize-space()='Send Attachments']\")\n    \n            time.sleep(2)\n            wait_and_click(login, By.XPATH, \"//label[normalize-space()='Click here to select the files']\")\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n            time.sleep(2)\n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            time.sleep(1)\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'send')]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            # ********************* Create the Prescription and Sharing ******************************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10)\n    \n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Prescriptions']\")\n    \n            for i in range(5):\n                wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='+ Add Medicine']\")\n                wait_and_send_keys( login, By.XPATH, \"//input[@role='searchbox']\", \"Medicine\")\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n            # Handle the dropdown element\n            # dropdown_locator_xpath = (\"//body/app-root[1]/app-business[1]/div[1]/div[1]/div[1]/app-provider-appointment-detail[1]/div[1]/div[1]/div[1]/div[1]/app-booking-details[1]/div[2]/app-customer-record[1]/div[1]/div[2]/div[1]/app-prescriptions[1]/div[1]/div[1]/div[2]/div[1]/app-create[1]/div[1]/div[3]/div[1]/span[1]/mat-select[1]/div[1]/div[2]/div[1]/*[1]\")\n            # dropdown_element = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, dropdown_locator_xpath))\n            # )\n            # dropdown_element.click()\n            wait_and_locate_click(login, By.XPATH, \"//mat-select[@aria-haspopup='listbox']\")\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            click_to_element(login, element3)\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='Save']\")\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"prescription created successfully\")\n            time.sleep(2)\n    \n            login.find_element(By.XPATH, \"//img[@alt='share']\").click()\n    \n            time.sleep(2)\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"prescription message\")\n    \n            login.find_element(\n                By.XPATH, \"(//input[@class='mdc-checkbox__native-control'])[1]\"\n            ).click()\n            login.find_element(By.XPATH, \"//span[normalize-space()='Whatsapp']\").click()\n            login.find_element(By.XPATH, \"//button[@type='button'][normalize-space()='Share']\").click()\n            # login.find_element(\n            #     By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            # ).send_keys(\"Prescription Message to Patient\")\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            print(\"Prescription Shared Successfully\")\n    \n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//img[@src='./assets/images/menu/settings.png'])[1]\")\n    \n            time.sleep(2)\n            setting_element = wait.until(\n                EC.presence_of_element_located((By.XPATH, \"(//div[normalize-space()='POS Ordering'])[1]\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", setting_element)\n    \n            time.sleep(1)\n            wait_and_locate_click(login, By.XPATH, \"(//p[normalize-space()='RX Push Management System'])[1]\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//*[name()='svg'][@class='mdc-switch__icon mdc-switch__icon--off'])[1]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n            time.sleep(2)\n    \n            wait_and_locate_click(login, By.XPATH, \"(//img)[3]\")\n    \n            time.sleep(2)\n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Prescriptions']\")\n    \n            time.sleep(2)\n            time.sleep(2)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[1]\"))\n            ).click()\n    \n            select_doc = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Naveen KP']\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", select_doc)\n    \n            select_doc.click()\n    \n            # Loop through rows and interact with each row\n            # Medicines: first is manual, rest are normal\n            medicines_to_add = [\n                {\"name\": \"Paracetamol\", \"manual\": True},  # manual entry\n                {\"name\": \"items\", \"manual\": False},\n                {\"name\": \"Item4\", \"manual\": False}\n            ]\n            for index, med in enumerate(medicines_to_add):\n                # Click the \"+ Add Medicine\" button\n                wait.until(\n                    EC.presence_of_element_located(\n                        (By.XPATH, \"//button[normalize-space()='+ Add Medicine']\")\n                    )\n                ).click()\n    \n                # Find the search box\n                search_box = wait.until(\n                    EC.presence_of_element_located((By.CSS_SELECTOR, \"input[role='searchbox']\"))\n                )\n                search_box.clear()\n                search_box.send_keys(med[\"name\"])\n                time.sleep(1)\n    \n                if not med[\"manual\"]:\n                    # Normal item → pick from autocomplete\n                    suggestions = login.find_elements(By.CSS_SELECTOR, \".p-autocomplete-item\")\n                    if suggestions:\n                        suggestions[0].click()\n                else:\n                    # Manual (ADOCH) item → confirm typed entry\n                    search_box.send_keys(Keys.ENTER)\n    \n                time.sleep(1)\n    \n                # Locate the current row\n                row = wait.until(\n                    EC.presence_of_element_located((By.XPATH, f\"//tbody/tr[{index + 1}]\"))\n                )\n    \n                # Duration\n                duration = row.find_element(By.XPATH, \".//td[3]/input[@type='number']\")\n                duration.clear()\n                duration.send_keys(\"5\")\n    \n                # Frequency dropdown\n                dropdown_trigger = row.find_element(\n                    By.XPATH, \".//td[4]//div[contains(@class, 'p-dropdown-trigger')]\"\n                )\n                dropdown_trigger.click()\n    \n                dropdown_options = WebDriverWait(login, 10).until(\n                    EC.presence_of_all_elements_located(\n                        (By.XPATH, \"//div[contains(@class,'p-dropdown-items-wrapper')]//li\")\n                    )\n                )\n                if dropdown_options:\n                    option_to_click = random.choice(dropdown_options)\n                    login.execute_script(\"arguments[0].scrollIntoView(true);\", option_to_click)\n                    time.sleep(0.5)\n                    login.execute_script(\"arguments[0].click();\", option_to_click)\n    \n                # Qty\n                qty_input = row.find_element(By.XPATH, \".//td[5]/input[@type='number']\")\n                qty_input.clear()\n                qty_input.send_keys(\"1\")\n    \n                # Remarks\n                row.find_element(By.XPATH, \".//td[6]\").click()\n                remarks = row.find_element(By.XPATH, \"//input[@role='searchbox']\")\n                remarks.clear()\n                remarks.send_keys(f\"Notes for {med['name']}\")\n    \n                time.sleep(1)\n    \n            # Finally submit\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Create Prescription']\")\n                )\n            ).click()\n    \n            time.sleep(3)  # Wait for the prescription to be processed\n    \n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Push RX']\"))\n            ).click()\n    \n            store = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Geetha']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", store)\n            store.click()\n    \n            time.sleep(1)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Push']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n            EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n            time.sleep(3)\n    \n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//img)[5]\"))\n            ).click()\n    \n            time.sleep(2)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-pristine ng-valid']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n            ).click()\n    \n            stores = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Geetha']\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", stores)\n            stores.click()\n    \n            time.sleep(2)\n    \n            RX_request_element = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Rx Requests']\"))\n            )\n    \n            scroll_to_element(login, RX_request_element)\n            time.sleep(1)\n            RX_request_element.click()\n    \n            time.sleep(2)\n            # Wait for the table to be present\n            table_body = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//tbody\"))\n            )\n    \n            # Locate the first table row\n            first_row = table_body.find_element(By.XPATH, \"(//tr[@class='ng-star-inserted'])[1]\")\n    \n            # Find the status element within the first row\n            status_element = first_row.find_element(By.XPATH, './/span[contains(@class, \"status-\")]')\n            status_text = status_element.text\n            expected_status = \"Pushed\"\n    \n            print(f\"Expected status: '{expected_status}', Actual status: '{status_text}'\")\n    \n            # Assert that the status is \"Pushed\"\n            assert status_text == \"Pushed\", f\"Expected status to be 'Pushed', but got '{status_text}'\"\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//img[@src='./assets/images/menu/settings.png'])[1]\")\n    \n            time.sleep(2)\n            setting_element = wait.until(\n                EC.presence_of_element_located((By.XPATH, \"(//div[normalize-space()='POS Ordering'])[1]\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", setting_element)\n    \n            time.sleep(1)\n            wait_and_locate_click(login, By.XPATH, \"(//p[normalize-space()='RX Push Management System'])[1]\")\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"(//label[normalize-space()='RX Push  On'])[1]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"(//img)[3]\")\n    \n            time.sleep(3)\n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n    \n    \n            # ************************* Case Creation and Sharing *********************\n    \n            time.sleep(5)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Patient Record']\")\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Patient Record']\"))\n            # ).click()\n    \n            login.implicitly_wait(5)\n            wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n            #     )\n            # ).click()\n    \n            time.sleep(3)\n            wait_and_send_keys(login, By.XPATH, \"//input[@placeholder='Enter Case Description']\", \"test case for case\")\n    \n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder = 'Enter Chief Complaint']\")\n                )\n            ).send_keys(\"Fever\")\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='History']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder ='Enter History']\"))\n            ).send_keys(\"viral fever\",Keys.RETURN)\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Medication']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Medication']\"))\n            ).send_keys(\"no medication\",Keys.RETURN)\n    \n            time.sleep(1)\n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].click();\", element)\n    \n    \n            # time.sleep(2)\n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Vital Signs']\")\n                )\n            ).click()\n    \n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Pulse Rate , Max : 999']\"\n            ).send_keys(\"560\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Respiration , Max : 90']\"\n            ).send_keys(\"62\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Temperature in °F , Max : 200']\"\n            ).send_keys(\"123\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Systolic , Max : 500']\"\n            ).send_keys(\"264\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Diastolic , Max : 500']\"\n            ).send_keys(\"287\")\n    \n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Treatment Plan']\"))\n            ).click()\n    \n    \n            treat_name = \"Treatment\" + str(uuid.uuid4())[:4]\n            treat_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@role='searchbox']\"))\n            )\n            treat_namebox.clear()\n            treat_namebox.send_keys(treat_name)\n    \n    \n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='p-multiselect-label p-placeholder']\"))\n            ).click()\n    \n    \n            dropdown_xpath = \"//span[normalize-space()='Naveen KP']\"\n            element = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            time.sleep(3)\n    \n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-white shadow fw-bold']\"))\n            ).click()\n    \n            step_name = \"Step\" + str(uuid.uuid1())[:1]\n            step_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@placeholder='Enter Name']\"))\n            )\n            step_namebox.clear()\n            step_namebox.send_keys(step_name)\n    \n    \n            WebDriverWait(login, 10).until(\n               EC.presence_of_element_located(\n                   (By.XPATH, \"//p-multiselect[@optionlabel='firstName']//span[@class='p-multiselect-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n           ).click()\n    \n            time.sleep(2)\n            element1 = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element1)\n            element1.click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='d-flex']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='In Progress']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Step Notes']\"))\n            ).send_keys(\"Steps for notes\")\n    \n            WebDriverWait(login, 10).until(\n            EC.element_to_be_clickable(\n                (By.XPATH, \"//label[@for='treatmentPlanAattachments']\")\n            )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Treatment Notes']\"))\n            ).send_keys(\"Note for the treatment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n    \n    \n            element2 = login.find_element(By.XPATH, \"//span[normalize-space()='Add the sections you need for this medical record']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element2)\n            element2.click()\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Observations']\")\n            #     )\n            # ).click()\n    \n            # time.sleep(3)\n    \n            # login.find_element(\n            #     By.XPATH, \"//input[@placeholder='Enter Observations']\"\n            # ).send_keys(\"Minor fever\",Keys.RETURN)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='minor fever']\")\n            #     )\n            # ).click()\n    \n            # element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            # element.click()\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Diagnosis']\")\n            #     )\n            # ).click()\n    \n            # login.find_element(\n            #     By.XPATH, \"//input[@placeholder='Enter Diagnosis']\"\n            # ).send_keys(\"High temperature\",Keys.RETURN)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='high temperature']\")\n            #     )\n            # ).click()\n    \n            # element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            # element.click()\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Prescription']\")\n                )\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n    \n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n    \n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            time.sleep(2)\n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//a[@class='add-action-btn']\"))\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter message description']\")\n                )\n            ).send_keys(\"case sharing testing\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Email')]\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Whatsapp')]\"))\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"Case file Shared successfully\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//i[@class='pi pi-arrow-left back-btn-arrow']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            # ************************* Auto Invoice and Sharing ************************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='View Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Auto Invoice\")\n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"1\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(4)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Pay by Cash']\"))\n            ).click()\n    \n            pay_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Pay']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", pay_button)\n    \n            time.sleep(3)\n            yes_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space(.)='Yes']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", yes_button)\n    \n    \n            # snack_bar = WebDriverWait(login, 30).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n            # )\n            # message = snack_bar.text\n            # print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            # ********************** Manual Invoice and Sharing ***********************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='New Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[@class='item-name'][normalize-space()='Naveen Consultation']\",\n                    )\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//button[@class='cs-btn bt1 ml-0'][normalize-space()='Add']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Update']\")\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Manual Invoice\")\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            add_service = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", add_service)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            # ).click()\n            login.execute_script(\"arguments[0].click();\", add_service)\n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"102\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n        #     # print(\"Successfully send the Payment Link to the patient\")\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            # print(\"Before clicking View Details button\")\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            # *************************** Reschedule **********************\n    \n            time.sleep(3)\n            login.find_element(By.XPATH, \"//button[contains(text(),'Reschedule')]\").click()\n            time.sleep(2)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='reschedule-date-picker']\")\n                )\n            ).click()\n    \n            today_date = datetime.now()\n            print(today_date.day)\n            today_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                today_date.day\n            )\n            print(today_xpath_expression)\n            tomorrow_date = today_date + timedelta(days=1)\n            print(tomorrow_date.day)\n    #===============================================================\n            # current_month = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-month')]\"))\n            # )\n    \n            # current_year = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-year')]\"))\n            # )\n    \n            # if current_month.text.lower() != tomorrow_date.strftime(\"%b\").lower() or current_year.text.lower() != tomorrow_date.strftime(\"%Y\").lower():\n    \n            #     login.find_element(By.XPATH, \"//button[contains(@class, 'p-datepicker-next')]\").click()\n    #===============================================================\n            tomorrow_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                tomorrow_date.day\n            )\n            print(tomorrow_xpath_expression)\n    \n            Tomorrow_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, tomorrow_xpath_expression))\n            )\n            Tomorrow_Date.click()\n            print(\"Tomorrow Date:\", Tomorrow_Date.text)\n    \n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected= 'false']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            reschedule_button = WebDriverWait(login, 30).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-primary reschedule-btn']\")\n                )\n            )\n            reschedule_button.click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n            # print(\"Reschedule Successfully\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Today')]\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Future']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            last_accordian = WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\",\n                    )\n                )\n            )\n            last_accordian.click()\n    \n            # *******************Cancellation **********************\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Change Status']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[contains(text(),'Cancel')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'No Show Up')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//span[normalize-space()='Ok']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[3]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[normalize-space()='Today'])[1]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[normalize-space()='Appointment'])[1]\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter name or phone or id']\")\n                )\n            ).send_keys(\"9207206005\")\n            time.sleep(2)\n            login.implicitly_wait(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Id : 2']\")\n                )\n            ).click()\n    \n    \n            time.sleep(3)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//i[@class='fa fa-pencil-square-o'])[1]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//label[normalize-space()='Archana Gopi'])[1]\"))\n            ).click()\n    \n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//button[normalize-space()='Okay'])[1]\"))\n            ).click()\n    \n            time.sleep(2)\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, user_dropdown_xpath))\n            ).click()\n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, user_option_xpath))\n            ).click()\n            print(\"Select user : Naveen\")\n    \n            # service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element = login.find_element(By.XPATH, \"//p-dropdown[@optionlabel='name']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, (\"//li[@aria-label='Naveen Consultation']//div[1]\")))\n            ).click()\n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n            time.sleep(2)\n            Today_Date.click()\n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//a[contains(text(),'Notes')]\"))\n            ).click()\n    \n            login.find_element(By.XPATH, \"//textarea[@id='message']\").send_keys(\n                \"Note for the walkin appointment\"\n            )\n    \n            WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Save']\")\n                )\n            ).click()\n            print(\"Note added for walkin appointment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Upload File']\")\n                )\n            ).click()\n    \n            time.sleep(4)\n           # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n            print(\"Successfully upload the file\")\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Confirm')]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            time.sleep(3)\n            more_actions_button = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='More Actions']\")\n                )\n            )\n            more_actions_button.click()\n    \n    \n    \n            # ****************************** Send Message **********************************************\n    \n            time.sleep(3)\n            message_button = WebDriverWait(login, 15).until(\n            EC.presence_of_element_located(\n            (By.XPATH, \"//button[normalize-space()='Send Message']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", message_button)\n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \" //textarea[@id='messageData']\").send_keys(\n                \"Send Message to the Patient\"\n            )\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//label[normalize-space()='Click here to select the files']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(4)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'send')]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            # print(\"Send Message Successfully\")\n    \n            # ******************* Send Attachment ************************\n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Send Attachments']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//label[normalize-space()='Click here to select the files']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[contains(text(),'send')])[1]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            # print(\"Attachment Send Successfully\")\n    \n            # ********************* Create the Prescription and Sharing ******************************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10)\n            login.find_element(\n                By.XPATH, \"//span[normalize-space()='Prescriptions']\"\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n            # Handle the dropdown element\n            # dropdown_locator_xpath = (\"//body/app-root[1]/app-business[1]/div[1]/div[1]/div[1]/app-provider-appointment-detail[1]/div[1]/div[1]/div[1]/div[1]/app-booking-details[1]/div[2]/app-customer-record[1]/div[1]/div[2]/div[1]/app-prescriptions[1]/div[1]/div[1]/div[2]/div[1]/app-create[1]/div[1]/div[3]/div[1]/span[1]/mat-select[1]/div[1]/div[2]/div[1]/*[1]\")\n            # dropdown_element = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, dropdown_locator_xpath))\n            # )\n            # dropdown_element.click()\n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"prescription created successfully\")\n            time.sleep(2)\n            login.find_element(By.XPATH, \"//img[@alt='share']\").click()\n    \n            time.sleep(2)\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"prescription message\")\n    \n            login.find_element(\n                By.XPATH, \"(//input[@class='mdc-checkbox__native-control'])[1]\"\n            ).click()\n            login.find_element(By.XPATH, \"//span[normalize-space()='Whatsapp']\").click()\n            login.find_element(By.XPATH, \"//button[@type='button'][normalize-space()='Share']\").click()\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"Prescription Message to Patient\")\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            print(\"Prescription Shared Successfully\")\n    \n            # ************************* Case Creation and Sharing *********************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Patient Record']\"))\n            ).click()\n    \n            login.implicitly_wait(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Case Description']\")\n                )\n            ).send_keys(\"test case for case\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder = 'Enter Chief Complaint']\")\n                )\n            ).send_keys(\"Fever\")\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='History']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder ='Enter History']\"))\n            ).send_keys(\"viral fever\",Keys.RETURN)\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Medication']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Medication']\"))\n            ).send_keys(\"no medication\",Keys.RETURN)\n    \n            time.sleep(1)\n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].click();\", element)\n    \n    \n            # time.sleep(2)\n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Vital Signs']\")\n                )\n            ).click()\n    \n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Pulse Rate , Max : 999']\"\n            ).send_keys(\"560\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Respiration , Max : 90']\"\n            ).send_keys(\"62\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Temperature in °F , Max : 200']\"\n            ).send_keys(\"123\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Systolic , Max : 500']\"\n            ).send_keys(\"264\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Diastolic , Max : 500']\"\n            ).send_keys(\"287\")\n    \n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Treatment Plan']\"))\n            ).click()\n    \n    \n            treat_name = \"Treatment\" + str(uuid.uuid4())[:4]\n            treat_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@role='searchbox']\"))\n            )\n            treat_namebox.clear()\n            treat_namebox.send_keys(treat_name)\n    \n    \n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='p-multiselect-label p-placeholder']\"))\n            ).click()\n    \n    \n            dropdown_xpath = \"//span[normalize-space()='Naveen KP']\"\n            element = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            time.sleep(3)\n    \n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-white shadow fw-bold']\"))\n            ).click()\n    \n            step_name = \"Step\" + str(uuid.uuid1())[:1]\n            step_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@placeholder='Enter Name']\"))\n            )\n            step_namebox.clear()\n            step_namebox.send_keys(step_name)\n    \n    \n            WebDriverWait(login, 10).until(\n               EC.presence_of_element_located(\n                   (By.XPATH, \"//p-multiselect[@optionlabel='firstName']//span[@class='p-multiselect-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n           ).click()\n    \n            time.sleep(2)\n            element1 = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element1)\n            element1.click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='d-flex']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='In Progress']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Step Notes']\"))\n            ).send_keys(\"Steps for notes\")\n    \n            WebDriverWait(login, 10).until(\n            EC.element_to_be_clickable(\n                (By.XPATH, \"//label[@for='treatmentPlanAattachments']\")\n            )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Treatment Notes']\"))\n            ).send_keys(\"Note for the treatment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n    \n    \n            element2 = login.find_element(By.XPATH, \"//span[normalize-space()='Add the sections you need for this medical record']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element2)\n            element2.click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Prescription']\")\n                )\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n    \n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n    \n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            time.sleep(2)\n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//a[@class='add-action-btn']\"))\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter message description']\")\n                )\n            ).send_keys(\"case sharing testing\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Email')]\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Whatsapp')]\"))\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"Case file Shared successfully\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//i[@class='pi pi-arrow-left back-btn-arrow']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            time.sleep(3)\n    \n        # #####************************* Auto Invoice and Sharing ************************#######\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='View Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Auto Invoice\")\n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"1\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(4)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Pay by Cash']\"))\n            ).click()\n    \n            pay_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Pay']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", pay_button)\n    \n            yes_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Yes']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", yes_button)\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//i[@class='fa fa-arrow-left'])[1]\")\n            time.sleep(2)\n    \n            # login.find_element(By.XPATH, \"(//span[@class='fa fa-arrow-left pointer-cursor'])[1]\").click()\n    \n            # time.sleep(3)\n            # while True:\n            #     try:\n            #         # Attempt to locate the \"Next\" button using the button's class\n            #         next_button = WebDriverWait(login, 10).until(\n            #             EC.presence_of_element_located(\n            #                 (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n            #             )\n            #         )\n    \n            #         # Check if the button is enabled (i.e., not disabled)\n            #         if next_button.is_enabled():\n            #             # print(\"Next button found and clickable.\")\n            #             # Click using JavaScript to avoid interception issues\n            #             login.execute_script(\"arguments[0].click();\", next_button)\n            #         else:\n            #             # print(\"Next button is disabled. Reached the last page.\")\n            #             break\n    \n            #     except Exception as e:\n            #         # # If no next button is found or any other exception occurs, exit the loop\n            #         # print(\"End of pages or error encountered:\", e)\n            #         break\n    \n            # # After clicking through all pages, locate and click the last accordion\n            # time.sleep(1)\n            # last_element_in_accordian = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            # )\n            # last_element_in_accordian.click()\n    \n            # time.sleep(3)\n            # View_Detail_button = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n            #     )\n            # )\n            # View_Detail_button.click()\n    \n    \n    \n            # ********************** Manual Invoice and Sharing ***********************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//button[normalize-space()='New Invoice'])[1]\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[@class='item-name'][normalize-space()='Naveen Consultation']\",\n                    )\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//button[@class='cs-btn bt1 ml-0'][normalize-space()='Add']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Update']\")\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Manual Invoice\")\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            add_service = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", add_service)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            # ).click()\n            login.execute_script(\"arguments[0].click();\", add_service)\n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"102\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n        #     # print(\"Successfully send the Payment Link to the patient\")\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            # print(\"Before clicking View Details button\")\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            # *************************** Reschedule **********************\n    \n            time.sleep(3)\n            login.find_element(By.XPATH, \"//button[contains(text(),'Reschedule')]\").click()\n            time.sleep(2)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='reschedule-date-picker']\")\n                )\n            ).click()\n    \n            today_date = datetime.now()\n            print(today_date.day)\n            today_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                today_date.day\n            )\n            print(today_xpath_expression)\n            tomorrow_date = today_date + timedelta(days=1)\n            print(tomorrow_date.day)\n    #===============================================================\n            # current_month = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-month')]\"))\n            # )\n    \n            # current_year = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-year')]\"))\n            # )\n    \n            # if current_month.text.lower() != tomorrow_date.strftime(\"%b\").lower() or current_year.text.lower() != tomorrow_date.strftime(\"%Y\").lower():\n    \n            #     login.find_element(By.XPATH, \"//button[contains(@class, 'p-datepicker-next')]\").click()\n    #===============================================================\n            tomorrow_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                tomorrow_date.day\n            )\n            print(tomorrow_xpath_expression)\n    \n            Tomorrow_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, tomorrow_xpath_expression))\n            )\n            Tomorrow_Date.click()\n            print(\"Tomorrow Date:\", Tomorrow_Date.text)\n    \n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected= 'false']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            reschedule_button = WebDriverWait(login, 30).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-primary reschedule-btn']\")\n                )\n            )\n            reschedule_button.click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n            # print(\"Reschedule Successfully\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Today')]\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Future']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            last_accordian = WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\",\n                    )\n                )\n            )\n            last_accordian.click()\n    \n            # *******************Cancellation **********************\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Change Status']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[contains(text(),'Cancel')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'No Show Up')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//span[normalize-space()='Ok']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n    \n    \n    \n    \n    \n        except Exception as e:\n            allure.attach(  # use Allure package, .attach() method, pass 3 params\n                login.get_screenshot_as_png(),  # param1\n                # login.screenshot()\n                name=\"full_page\",  # param2\n                attachment_type=AttachmentType.PNG,\n            )\n>           raise e\n\nSelenium Project\\Deployment\\Pre_Deployment\\Pre Deployment_Walkin_Appointment_test.py:4401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nSelenium Project\\Deployment\\Pre_Deployment\\Pre Deployment_Walkin_Appointment_test.py:4236: in test_walkin_appointment\n    last_element_in_accordian = WebDriverWait(login, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"62239efe39c1b20bc55426c9e4ec56ff\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000213E821FBA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff705b9fc95+79861]\nE       \tGetHandleVerifier [0x0x7ff705b9fcf0+79952]\nE       \t(No symbol) [0x0x7ff70591cada]\nE       \t(No symbol) [0x0x7ff705974457]\nE       \t(No symbol) [0x0x7ff70597471c]\nE       \t(No symbol) [0x0x7ff7059c8217]\nE       \t(No symbol) [0x0x7ff70599cb1f]\nE       \t(No symbol) [0x0x7ff7059c4f8b]\nE       \t(No symbol) [0x0x7ff70599c8b3]\nE       \t(No symbol) [0x0x7ff705965272]\nE       \t(No symbol) [0x0x7ff705966043]\nE       \tGetHandleVerifier [0x0x7ff705e5b9cd+2946349]\nE       \tGetHandleVerifier [0x0x7ff705e55c4a+2922410]\nE       \tGetHandleVerifier [0x0x7ff705e759d7+3052855]\nE       \tGetHandleVerifier [0x0x7ff705bbaa7e+189918]\nE       \tGetHandleVerifier [0x0x7ff705bc2a1f+222591]\nE       \tGetHandleVerifier [0x0x7ff705ba8ab4+116244]\nE       \tGetHandleVerifier [0x0x7ff705ba8c69+116681]\nE       \tGetHandleVerifier [0x0x7ff705b8f048+11176]\nE       \tBaseThreadInitThunk [0x0x7ff8bbcee8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff8bc8e8d9c+44]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757673673546,"stop":1757673673736,"duration":190},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login","time":{"start":1757673673737,"stop":1757673679270,"duration":5533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff705b9fc95+79861]\n\tGetHandleVerifier [0x0x7ff705b9fcf0+79952]\n\t(No symbol) [0x0x7ff70591cada]\n\t(No symbol) [0x0x7ff705974457]\n\t(No symbol) [0x0x7ff70597471c]\n\t(No symbol) [0x0x7ff7059c8217]\n\t(No symbol) [0x0x7ff70599cb1f]\n\t(No symbol) [0x0x7ff7059c4f8b]\n\t(No symbol) [0x0x7ff70599c8b3]\n\t(No symbol) [0x0x7ff705965272]\n\t(No symbol) [0x0x7ff705966043]\n\tGetHandleVerifier [0x0x7ff705e5b9cd+2946349]\n\tGetHandleVerifier [0x0x7ff705e55c4a+2922410]\n\tGetHandleVerifier [0x0x7ff705e759d7+3052855]\n\tGetHandleVerifier [0x0x7ff705bbaa7e+189918]\n\tGetHandleVerifier [0x0x7ff705bc2a1f+222591]\n\tGetHandleVerifier [0x0x7ff705ba8ab4+116244]\n\tGetHandleVerifier [0x0x7ff705ba8c69+116681]\n\tGetHandleVerifier [0x0x7ff705b8f048+11176]\n\tBaseThreadInitThunk [0x0x7ff8bbcee8d7+23]\n\tRtlUserThreadStart [0x0x7ff8bc8e8d9c+44]","statusTrace":"login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"62239efe39c1b20bc55426c9e4ec56ff\")>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Appointment Pre deployment testing\")\n    @pytest.mark.parametrize(\"url, username, password\", [(scale_url, main_scale, password)])\n    def test_walkin_appointment(login):\n    \n        current_date = datetime.now().strftime(\"%Y-%m-%d\")\n        print(\"Pre-Deployment Provider Appointment : \",current_date)\n        try:\n    \n            time.sleep(5)\n            print(\"New patient create\")\n    \n            wait_and_click(login, By.XPATH, \"//div[contains(@class, 'font-small') and contains(text(),'Appointments')]\")\n    \n            time.sleep(3)\n    \n            wait_and_click(login, By.XPATH, \"//div[contains(@class, 'my-1') and .//span[text()='Appointment']]\")\n    \n            time.sleep(3)\n            print(\"Create new patient\")\n    \n            wait_and_click(login, By.XPATH, \"//b[normalize-space()='Create New Patient']\")\n    \n            login.implicitly_wait(3)\n            first_name, last_name, cons_manual_id, phonenumber, email = create_user_data()\n    \n            wait_and_send_keys(login, By.XPATH, \"//input[@id='first_name']\", str(first_name))\n            wait_and_send_keys(login, By.XPATH, \"//input[@id='last_name']\", str(last_name))\n            wait_and_send_keys(login, By.XPATH, \"//*[@id='customer_id']\", cons_manual_id)\n            wait_and_send_keys(login, By.XPATH, \"//*[@id='phone']\", phonenumber)\n            wait_and_send_keys(login, By.XPATH, \"//ngx-intl-tel-input[@name='whatsApp']//input[@id='phone']\", phonenumber)\n            wait_and_send_keys(login, By.XPATH, \"//input[@id='email_id']\", email)\n            wait_and_click(login, By.XPATH, \"//span[contains(text(),'Save')]\")\n    \n            time.sleep(5)\n    \n            wait_and_click(login, By.CSS_SELECTOR, \"p-dropdown[optionlabel='place']\")\n            wait_and_visible_click (login, By.XPATH, \"(//li[@id='p-highlighted-option'])[1]\")\n    \n            print(\"location : Chavakkad\")\n            login.implicitly_wait(5)\n    \n            wait_and_locate_click(login, By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[2]\")\n    \n            login.implicitly_wait(5)\n            wait_and_visible_click(login, By.XPATH, \"(//li[@aria-label='ENT'])[1]\")\n    \n            print(\"Department : ENT\")\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n    \n            wait_and_click(login, By.XPATH, user_dropdown_xpath)\n    \n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            wait_and_click(login, By.XPATH, user_option_xpath)\n            print(\"Select user : Naveen\")\n    \n            time.sleep(3)\n            service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element= login.find_element(By.XPATH, service_dropdown_xpath)\n            scroll_to_element(login, element)\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.element_to_be_clickable((By.XPATH, service_option_xpath))\n            # ).click()\n    \n            wait_and_locate_click(login, By.XPATH, service_option_xpath)\n    \n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n    \n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n    \n            click_to_element(login, Today_Date)\n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            click_to_element(login, time_slot)\n    \n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Confirm']\")\n            time.sleep(4)\n    \n            # WebDriverWait(login, 15).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//img[@src='./assets/images/menu/settings.png']\"))\n            # ).click()\n    \n    \n            # fea_cust = login.find_element(By.XPATH, \"//div[normalize-space()='Features and Customization']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", fea_cust)\n    \n            # time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Custom Fields']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Label']\"))\n            # ).click()\n    \n            # label_name1 = \"Label\" + str(uuid.uuid1())[:3]\n            # label_namebox1 = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, \"//input[@id='displayName']\"))\n            # )\n            # label_namebox1.clear()\n            # label_namebox1.send_keys(label_name1)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='mdc-button__label']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\"))\n            # ).click()\n    \n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//body/app-root[1]/app-business[1]/div[1]/app-sidebar-menu[1]/div[1]/div[2]/div[1]/ul[1]/li[2]/a[1]/div[1]/span[1]/span[1]/img[1]\")\n    \n            time.sleep(2)\n            element =wait.until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'my-1') and .//span[text()='Appointment']]\",\n                    )\n                )\n            )\n            click_to_element(login, element)\n    \n            wait_and_send_keys(login, By.XPATH, \"//input[@placeholder='Enter name or phone or id']\", \"9207206005\")\n            time.sleep(2)\n            login.implicitly_wait(5)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Id : 2']\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.CSS_SELECTOR, \"p-dropdown[optionlabel='place']\")\n    \n            login.find_element(By.XPATH, \"(//li[@id='p-highlighted-option'])[1]\").click()\n            print(\"location : Chavakkad\")\n            login.implicitly_wait(5)\n    \n            login.find_element(\n                By.CSS_SELECTOR, \"p-dropdown[optionlabel='departmentName']\"\n            ).click()\n            login.implicitly_wait(5)\n            login.find_element(By.XPATH, \"(//li[@aria-label='ENT'])[1]\").click()\n            print(\"Department : ENT\")\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n            wait_and_click(login, By.XPATH, user_dropdown_xpath)\n    \n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            wait_and_click(login, By.XPATH, user_option_xpath)\n    \n            print(\"Select user : Naveen\")\n    \n            # service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element = login.find_element(By.XPATH, \"//p-dropdown[@optionlabel='name']\")\n            scroll_to_element(login, element)\n            time.sleep(2)\n            element.click()\n    \n            # service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            time.sleep(3)\n            service_option = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, (\"//li[@aria-label='Naveen Consultation']//div[1]\")))\n            )\n            click_to_element(login, service_option)\n            # login.execute_script(\"arguments[0].click();\", service_option)\n    \n    \n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n            time.sleep(2)\n            click_to_element(login, Today_Date)\n    \n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            wait_and_locate_click(login, By.XPATH, \"//a[contains(text(),'Notes')]\")\n    \n            login.find_element(By.XPATH, \"//textarea[@id='message']\").send_keys(\"Note for the walkin appointment\")\n    \n            wait_and_visible_click(login, By.XPATH, \"//span[normalize-space()='Save']\")\n    \n            print(\"Note added for walkin appointment\")\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Upload File']\")\n    \n            time.sleep(4)\n           # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n            print(\"Successfully upload the file\")\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'Confirm')]\")\n            message = get_snack_bar_message(login)\n            print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n    \n            #************************************** Apply Label ***********************************************\n    \n            # time.sleep(3)\n            # more_actions_button = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='More Actions']\")\n            #     )\n            # )\n            # more_actions_button.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Apply Labels']\"))\n            # ).click()\n    \n            # login.implicitly_wait(5)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Create New']\"))\n            # ).click()\n    \n            # label_name = \"Label\" + str(uuid.uuid1())[:3]\n            # label_namebox = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, \"//input[@id='displayName']\"))\n            # )\n            # label_namebox.clear()\n            # label_namebox.send_keys(label_name)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Create']\"))\n            # ).click()\n    \n            # label_xpath = f\"//label[normalize-space()='{label_name}']\"\n    \n            # # Wait for the label to appear and click on it\n            # label = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located((By.XPATH, label_xpath))\n            # )\n            # login.execute_script(\"arguments[0].scrollIntoView();\", label_xpath)\n            # label.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Apply']\"))\n            # ).click()\n    \n            # Selected_label = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #         (By.XPATH, label_xpath))\n            # )\n    \n            # # Get the text of the confirmation message\n            # actual_label = Selected_label.text\n            # print(\"Selected Label:\", actual_label)\n    \n            # # Assert the expected text\n            # expected_label = Selected_label.text\n            # assert (\n            #     actual_label == expected_label\n            # ), f\"Expected '{expected_label}', but got '{actual_label}'\"\n    \n            # # Applying Filter\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\"))\n            # ).click()\n    \n            # login.implicitly_wait(5)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//i[@class='pi pi-filter-fill']\"))\n            # ).click()\n    \n            # time.sleep(3)\n            # Label_filter = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[contains(text(),'Labels')]\"))\n            # )\n            # login.execute_script(\"arguments[0].scrollIntoView();\", Label_filter)\n            # Label_filter.click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//div[contains(text(),'Select Labels')]\"))\n            # ).click()\n    \n            # time.sleep(3)\n    \n            #  # Wait for the list to be visible\n            # WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.XPATH, \"//ul[@role='listbox']\"))\n            # )\n    \n            # # Locate all the list items\n            # list_items = WebDriverWait(login, 10).until(\n            #     EC.presence_of_all_elements_located((By.XPATH, \"//ul[@role='listbox']//li\"))\n            # )\n    \n            # # Get the last item in the list\n            # last_item = list_items[-1]\n    \n            # # Initialize ActionChains\n            # actions = ActionChains(login)\n    \n            # # Move to the last item and click it\n            # actions.move_to_element(last_item).click().perform()\n    \n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//timesicon[@class='p-element p-icon-wrapper ng-star-inserted']//*[name()='svg']//*[name()='path' and contains(@d,'M8.01186 7')]\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[contains(text(),'Apply')]\"))\n            # ).click()\n    \n            # time.sleep(3)\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')]\"))\n            #     ).click()\n    \n            # time.sleep(3)\n            # assert (\n            #     actual_label == expected_label\n            # ), f\"Expected '{expected_label}', but got '{actual_label}'\"\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//i[@class='pi pi-filter-fill']\"))\n            # ).click()\n    \n            # time.sleep(3)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Reset']\"))\n            # ).click()\n    \n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//timesicon[contains(@class, 'p-element') and contains(@class, 'p-icon-wrapper') and contains(@class, 'ng-star-inserted')]//*[contains(@class, 'p-icon')]\"))\n            # ).click()\n    \n            # time.sleep(2)\n            # login.refresh()\n    \n            # # time.sleep(5)\n            # while True:\n            #     try:\n            #         # Attempt to locate the \"Next\" button using the button's class\n            #         next_button = WebDriverWait(login, 10).until(\n            #             EC.presence_of_element_located(\n            #                 (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n            #             )\n            #         )\n    \n            #         # Check if the button is enabled (i.e., not disabled)\n            #         if next_button.is_enabled():\n            #             # print(\"Next button found and clickable.\")\n            #             # Click using JavaScript to avoid interception issues\n            #             login.execute_script(\"arguments[0].click();\", next_button)\n            #         else:\n            #             # print(\"Next button is disabled. Reached the last page.\")\n            #             break\n    \n            #     except Exception as e:\n            #         # # If no next button is found or any other exception occurs, exit the loop\n            #         # print(\"End of pages or error encountered:\", e)\n            #         break\n    \n            # # After clicking through all pages, locate and click the last accordion\n            # time.sleep(3)\n            # last_element_in_accordian = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            # )\n            # last_element_in_accordian.click()\n    \n            time.sleep(3)\n            more_actions_button = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='More Actions']\")\n                )\n            )\n            click_to_element(login, more_actions_button)\n    \n    \n    \n    \n            # ****************************** Send Message **********************************************\n    \n            time.sleep(3)\n            message_button = WebDriverWait(login, 15).until(\n            EC.presence_of_element_located(\n            (By.XPATH, \"//button[normalize-space()='Send Message']\"))\n            )\n            click_to_element(login, message_button)\n    \n            time.sleep(2)\n            wait_and_send_keys(login, By.XPATH, \"//textarea[@id='messageData']\", \"Send Message to the Patient\")\n    \n            time.sleep(3)\n            wait_and_click(login, By.XPATH, \"//label[normalize-space()='Click here to select the files']\")\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(4)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'send')]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            # ******************* Send Attachment ************************\n            time.sleep(5)\n            wait_and_visible_click(login, By.XPATH, \"//button[normalize-space()='Send Attachments']\")\n    \n            time.sleep(2)\n            wait_and_click(login, By.XPATH, \"//label[normalize-space()='Click here to select the files']\")\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n            time.sleep(2)\n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            time.sleep(1)\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"//span[contains(text(),'send')]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            # ********************* Create the Prescription and Sharing ******************************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10)\n    \n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Prescriptions']\")\n    \n            for i in range(5):\n                wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='+ Add Medicine']\")\n                wait_and_send_keys( login, By.XPATH, \"//input[@role='searchbox']\", \"Medicine\")\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n            # Handle the dropdown element\n            # dropdown_locator_xpath = (\"//body/app-root[1]/app-business[1]/div[1]/div[1]/div[1]/app-provider-appointment-detail[1]/div[1]/div[1]/div[1]/div[1]/app-booking-details[1]/div[2]/app-customer-record[1]/div[1]/div[2]/div[1]/app-prescriptions[1]/div[1]/div[1]/div[2]/div[1]/app-create[1]/div[1]/div[3]/div[1]/span[1]/mat-select[1]/div[1]/div[2]/div[1]/*[1]\")\n            # dropdown_element = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, dropdown_locator_xpath))\n            # )\n            # dropdown_element.click()\n            wait_and_locate_click(login, By.XPATH, \"//mat-select[@aria-haspopup='listbox']\")\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            click_to_element(login, element3)\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='Save']\")\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"prescription created successfully\")\n            time.sleep(2)\n    \n            login.find_element(By.XPATH, \"//img[@alt='share']\").click()\n    \n            time.sleep(2)\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"prescription message\")\n    \n            login.find_element(\n                By.XPATH, \"(//input[@class='mdc-checkbox__native-control'])[1]\"\n            ).click()\n            login.find_element(By.XPATH, \"//span[normalize-space()='Whatsapp']\").click()\n            login.find_element(By.XPATH, \"//button[@type='button'][normalize-space()='Share']\").click()\n            # login.find_element(\n            #     By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            # ).send_keys(\"Prescription Message to Patient\")\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            print(\"Prescription Shared Successfully\")\n    \n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//img[@src='./assets/images/menu/settings.png'])[1]\")\n    \n            time.sleep(2)\n            setting_element = wait.until(\n                EC.presence_of_element_located((By.XPATH, \"(//div[normalize-space()='POS Ordering'])[1]\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", setting_element)\n    \n            time.sleep(1)\n            wait_and_locate_click(login, By.XPATH, \"(//p[normalize-space()='RX Push Management System'])[1]\")\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//*[name()='svg'][@class='mdc-switch__icon mdc-switch__icon--off'])[1]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n            time.sleep(2)\n    \n            wait_and_locate_click(login, By.XPATH, \"(//img)[3]\")\n    \n            time.sleep(2)\n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Prescriptions']\")\n    \n            time.sleep(2)\n            time.sleep(2)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[1]\"))\n            ).click()\n    \n            select_doc = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Naveen KP']\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", select_doc)\n    \n            select_doc.click()\n    \n            # Loop through rows and interact with each row\n            # Medicines: first is manual, rest are normal\n            medicines_to_add = [\n                {\"name\": \"Paracetamol\", \"manual\": True},  # manual entry\n                {\"name\": \"items\", \"manual\": False},\n                {\"name\": \"Item4\", \"manual\": False}\n            ]\n            for index, med in enumerate(medicines_to_add):\n                # Click the \"+ Add Medicine\" button\n                wait.until(\n                    EC.presence_of_element_located(\n                        (By.XPATH, \"//button[normalize-space()='+ Add Medicine']\")\n                    )\n                ).click()\n    \n                # Find the search box\n                search_box = wait.until(\n                    EC.presence_of_element_located((By.CSS_SELECTOR, \"input[role='searchbox']\"))\n                )\n                search_box.clear()\n                search_box.send_keys(med[\"name\"])\n                time.sleep(1)\n    \n                if not med[\"manual\"]:\n                    # Normal item → pick from autocomplete\n                    suggestions = login.find_elements(By.CSS_SELECTOR, \".p-autocomplete-item\")\n                    if suggestions:\n                        suggestions[0].click()\n                else:\n                    # Manual (ADOCH) item → confirm typed entry\n                    search_box.send_keys(Keys.ENTER)\n    \n                time.sleep(1)\n    \n                # Locate the current row\n                row = wait.until(\n                    EC.presence_of_element_located((By.XPATH, f\"//tbody/tr[{index + 1}]\"))\n                )\n    \n                # Duration\n                duration = row.find_element(By.XPATH, \".//td[3]/input[@type='number']\")\n                duration.clear()\n                duration.send_keys(\"5\")\n    \n                # Frequency dropdown\n                dropdown_trigger = row.find_element(\n                    By.XPATH, \".//td[4]//div[contains(@class, 'p-dropdown-trigger')]\"\n                )\n                dropdown_trigger.click()\n    \n                dropdown_options = WebDriverWait(login, 10).until(\n                    EC.presence_of_all_elements_located(\n                        (By.XPATH, \"//div[contains(@class,'p-dropdown-items-wrapper')]//li\")\n                    )\n                )\n                if dropdown_options:\n                    option_to_click = random.choice(dropdown_options)\n                    login.execute_script(\"arguments[0].scrollIntoView(true);\", option_to_click)\n                    time.sleep(0.5)\n                    login.execute_script(\"arguments[0].click();\", option_to_click)\n    \n                # Qty\n                qty_input = row.find_element(By.XPATH, \".//td[5]/input[@type='number']\")\n                qty_input.clear()\n                qty_input.send_keys(\"1\")\n    \n                # Remarks\n                row.find_element(By.XPATH, \".//td[6]\").click()\n                remarks = row.find_element(By.XPATH, \"//input[@role='searchbox']\")\n                remarks.clear()\n                remarks.send_keys(f\"Notes for {med['name']}\")\n    \n                time.sleep(1)\n    \n            # Finally submit\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Create Prescription']\")\n                )\n            ).click()\n    \n            time.sleep(3)  # Wait for the prescription to be processed\n    \n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Push RX']\"))\n            ).click()\n    \n            store = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Geetha']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", store)\n            store.click()\n    \n            time.sleep(1)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Push']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n            EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n            time.sleep(3)\n    \n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//img)[5]\"))\n            ).click()\n    \n            time.sleep(2)\n            wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-pristine ng-valid']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n            ).click()\n    \n            stores = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Geetha']\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", stores)\n            stores.click()\n    \n            time.sleep(2)\n    \n            RX_request_element = wait.until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Rx Requests']\"))\n            )\n    \n            scroll_to_element(login, RX_request_element)\n            time.sleep(1)\n            RX_request_element.click()\n    \n            time.sleep(2)\n            # Wait for the table to be present\n            table_body = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//tbody\"))\n            )\n    \n            # Locate the first table row\n            first_row = table_body.find_element(By.XPATH, \"(//tr[@class='ng-star-inserted'])[1]\")\n    \n            # Find the status element within the first row\n            status_element = first_row.find_element(By.XPATH, './/span[contains(@class, \"status-\")]')\n            status_text = status_element.text\n            expected_status = \"Pushed\"\n    \n            print(f\"Expected status: '{expected_status}', Actual status: '{status_text}'\")\n    \n            # Assert that the status is \"Pushed\"\n            assert status_text == \"Pushed\", f\"Expected status to be 'Pushed', but got '{status_text}'\"\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//img[@src='./assets/images/menu/settings.png'])[1]\")\n    \n            time.sleep(2)\n            setting_element = wait.until(\n                EC.presence_of_element_located((By.XPATH, \"(//div[normalize-space()='POS Ordering'])[1]\"))\n            )\n    \n            login.execute_script(\"arguments[0].scrollIntoView();\", setting_element)\n    \n            time.sleep(1)\n            wait_and_locate_click(login, By.XPATH, \"(//p[normalize-space()='RX Push Management System'])[1]\")\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"(//label[normalize-space()='RX Push  On'])[1]\")\n    \n            get_snack_bar_message(login)\n            print(\"Snack bar message:\", get_snack_bar_message(login))\n    \n            time.sleep(3)\n            wait_and_locate_click(login, By.XPATH, \"(//img)[3]\")\n    \n            time.sleep(3)\n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            click_to_element(login, View_Detail_button)\n    \n    \n    \n            # ************************* Case Creation and Sharing *********************\n    \n            time.sleep(5)\n            wait_and_locate_click(login, By.XPATH, \"//span[normalize-space()='Patient Record']\")\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='Patient Record']\"))\n            # ).click()\n    \n            login.implicitly_wait(5)\n            wait_and_locate_click(login, By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n            #     )\n            # ).click()\n    \n            time.sleep(3)\n            wait_and_send_keys(login, By.XPATH, \"//input[@placeholder='Enter Case Description']\", \"test case for case\")\n    \n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder = 'Enter Chief Complaint']\")\n                )\n            ).send_keys(\"Fever\")\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='History']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder ='Enter History']\"))\n            ).send_keys(\"viral fever\",Keys.RETURN)\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Medication']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Medication']\"))\n            ).send_keys(\"no medication\",Keys.RETURN)\n    \n            time.sleep(1)\n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].click();\", element)\n    \n    \n            # time.sleep(2)\n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Vital Signs']\")\n                )\n            ).click()\n    \n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Pulse Rate , Max : 999']\"\n            ).send_keys(\"560\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Respiration , Max : 90']\"\n            ).send_keys(\"62\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Temperature in °F , Max : 200']\"\n            ).send_keys(\"123\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Systolic , Max : 500']\"\n            ).send_keys(\"264\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Diastolic , Max : 500']\"\n            ).send_keys(\"287\")\n    \n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Treatment Plan']\"))\n            ).click()\n    \n    \n            treat_name = \"Treatment\" + str(uuid.uuid4())[:4]\n            treat_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@role='searchbox']\"))\n            )\n            treat_namebox.clear()\n            treat_namebox.send_keys(treat_name)\n    \n    \n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='p-multiselect-label p-placeholder']\"))\n            ).click()\n    \n    \n            dropdown_xpath = \"//span[normalize-space()='Naveen KP']\"\n            element = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            time.sleep(3)\n    \n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-white shadow fw-bold']\"))\n            ).click()\n    \n            step_name = \"Step\" + str(uuid.uuid1())[:1]\n            step_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@placeholder='Enter Name']\"))\n            )\n            step_namebox.clear()\n            step_namebox.send_keys(step_name)\n    \n    \n            WebDriverWait(login, 10).until(\n               EC.presence_of_element_located(\n                   (By.XPATH, \"//p-multiselect[@optionlabel='firstName']//span[@class='p-multiselect-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n           ).click()\n    \n            time.sleep(2)\n            element1 = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element1)\n            element1.click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='d-flex']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='In Progress']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Step Notes']\"))\n            ).send_keys(\"Steps for notes\")\n    \n            WebDriverWait(login, 10).until(\n            EC.element_to_be_clickable(\n                (By.XPATH, \"//label[@for='treatmentPlanAattachments']\")\n            )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Treatment Notes']\"))\n            ).send_keys(\"Note for the treatment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n    \n    \n            element2 = login.find_element(By.XPATH, \"//span[normalize-space()='Add the sections you need for this medical record']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element2)\n            element2.click()\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Observations']\")\n            #     )\n            # ).click()\n    \n            # time.sleep(3)\n    \n            # login.find_element(\n            #     By.XPATH, \"//input[@placeholder='Enter Observations']\"\n            # ).send_keys(\"Minor fever\",Keys.RETURN)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='minor fever']\")\n            #     )\n            # ).click()\n    \n            # element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            # element.click()\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Diagnosis']\")\n            #     )\n            # ).click()\n    \n            # login.find_element(\n            #     By.XPATH, \"//input[@placeholder='Enter Diagnosis']\"\n            # ).send_keys(\"High temperature\",Keys.RETURN)\n    \n            # time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//span[normalize-space()='high temperature']\")\n            #     )\n            # ).click()\n    \n            # element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            # login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            # element.click()\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Prescription']\")\n                )\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n    \n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n    \n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            time.sleep(2)\n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//a[@class='add-action-btn']\"))\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter message description']\")\n                )\n            ).send_keys(\"case sharing testing\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Email')]\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Whatsapp')]\"))\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"Case file Shared successfully\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//i[@class='pi pi-arrow-left back-btn-arrow']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            # ************************* Auto Invoice and Sharing ************************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='View Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Auto Invoice\")\n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"1\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(4)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Pay by Cash']\"))\n            ).click()\n    \n            pay_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Pay']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", pay_button)\n    \n            time.sleep(3)\n            yes_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space(.)='Yes']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", yes_button)\n    \n    \n            # snack_bar = WebDriverWait(login, 30).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n            # )\n            # message = snack_bar.text\n            # print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            # ********************** Manual Invoice and Sharing ***********************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='New Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[@class='item-name'][normalize-space()='Naveen Consultation']\",\n                    )\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//button[@class='cs-btn bt1 ml-0'][normalize-space()='Add']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Update']\")\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Manual Invoice\")\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            add_service = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", add_service)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            # ).click()\n            login.execute_script(\"arguments[0].click();\", add_service)\n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"102\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n        #     # print(\"Successfully send the Payment Link to the patient\")\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            # print(\"Before clicking View Details button\")\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            # *************************** Reschedule **********************\n    \n            time.sleep(3)\n            login.find_element(By.XPATH, \"//button[contains(text(),'Reschedule')]\").click()\n            time.sleep(2)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='reschedule-date-picker']\")\n                )\n            ).click()\n    \n            today_date = datetime.now()\n            print(today_date.day)\n            today_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                today_date.day\n            )\n            print(today_xpath_expression)\n            tomorrow_date = today_date + timedelta(days=1)\n            print(tomorrow_date.day)\n    #===============================================================\n            # current_month = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-month')]\"))\n            # )\n    \n            # current_year = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-year')]\"))\n            # )\n    \n            # if current_month.text.lower() != tomorrow_date.strftime(\"%b\").lower() or current_year.text.lower() != tomorrow_date.strftime(\"%Y\").lower():\n    \n            #     login.find_element(By.XPATH, \"//button[contains(@class, 'p-datepicker-next')]\").click()\n    #===============================================================\n            tomorrow_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                tomorrow_date.day\n            )\n            print(tomorrow_xpath_expression)\n    \n            Tomorrow_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, tomorrow_xpath_expression))\n            )\n            Tomorrow_Date.click()\n            print(\"Tomorrow Date:\", Tomorrow_Date.text)\n    \n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected= 'false']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            reschedule_button = WebDriverWait(login, 30).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-primary reschedule-btn']\")\n                )\n            )\n            reschedule_button.click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n            # print(\"Reschedule Successfully\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Today')]\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Future']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            last_accordian = WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\",\n                    )\n                )\n            )\n            last_accordian.click()\n    \n            # *******************Cancellation **********************\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Change Status']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[contains(text(),'Cancel')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'No Show Up')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//span[normalize-space()='Ok']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted'])[3]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[normalize-space()='Today'])[1]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[normalize-space()='Appointment'])[1]\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter name or phone or id']\")\n                )\n            ).send_keys(\"9207206005\")\n            time.sleep(2)\n            login.implicitly_wait(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Id : 2']\")\n                )\n            ).click()\n    \n    \n            time.sleep(3)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//i[@class='fa fa-pencil-square-o'])[1]\"))\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//label[normalize-space()='Archana Gopi'])[1]\"))\n            ).click()\n    \n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//button[normalize-space()='Okay'])[1]\"))\n            ).click()\n    \n            time.sleep(2)\n            user_dropdown_xpath = (\n                \"(//p-dropdown[@class='p-element p-inputwrapper p-inputwrapper-filled ng-untouched ng-valid \"\n                \"ng-dirty'])[1]\"\n            )\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, user_dropdown_xpath))\n            ).click()\n            user_option_xpath = \"(//li[@aria-label='Naveen KP'])[1]\"\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, user_option_xpath))\n            ).click()\n            print(\"Select user : Naveen\")\n    \n            # service_dropdown_xpath = \"//p-dropdown[@optionlabel='name']\"\n            element = login.find_element(By.XPATH, \"//p-dropdown[@optionlabel='name']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # service_option_xpath = (\"//li[@aria-label='Naveen Consultation']//div[1]\")\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable((By.XPATH, (\"//li[@aria-label='Naveen Consultation']//div[1]\")))\n            ).click()\n            print(\"Select Service : Naveen Consultation\")\n            time.sleep(5)\n            Today_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//span[@class='mat-calendar-body-cell-content mat-focus-indicator mat-calendar-body-selected mat-calendar-body-today']\",\n                    )\n                )\n            )\n            time.sleep(2)\n            Today_Date.click()\n            print(\"Today Date:\", Today_Date.text)\n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected='true']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//a[contains(text(),'Notes')]\"))\n            ).click()\n    \n            login.find_element(By.XPATH, \"//textarea[@id='message']\").send_keys(\n                \"Note for the walkin appointment\"\n            )\n    \n            WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Save']\")\n                )\n            ).click()\n            print(\"Note added for walkin appointment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Upload File']\")\n                )\n            ).click()\n    \n            time.sleep(4)\n           # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n            print(\"Successfully upload the file\")\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Confirm')]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            while True:\n                try:\n    \n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n    \n                    if next_button.is_enabled():\n    \n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n    \n                        break\n    \n                except Exception as e:\n    \n                    break\n    \n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            time.sleep(3)\n            more_actions_button = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='More Actions']\")\n                )\n            )\n            more_actions_button.click()\n    \n    \n    \n            # ****************************** Send Message **********************************************\n    \n            time.sleep(3)\n            message_button = WebDriverWait(login, 15).until(\n            EC.presence_of_element_located(\n            (By.XPATH, \"//button[normalize-space()='Send Message']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", message_button)\n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \" //textarea[@id='messageData']\").send_keys(\n                \"Send Message to the Patient\"\n            )\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//label[normalize-space()='Click here to select the files']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(4)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'send')]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            # print(\"Send Message Successfully\")\n    \n            # ******************* Send Attachment ************************\n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Send Attachments']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//label[normalize-space()='Click here to select the files']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//span[contains(text(),'send')])[1]\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            # print(\"Attachment Send Successfully\")\n    \n            # ********************* Create the Prescription and Sharing ******************************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10)\n            login.find_element(\n                By.XPATH, \"//span[normalize-space()='Prescriptions']\"\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n            # Handle the dropdown element\n            # dropdown_locator_xpath = (\"//body/app-root[1]/app-business[1]/div[1]/div[1]/div[1]/app-provider-appointment-detail[1]/div[1]/div[1]/div[1]/div[1]/app-booking-details[1]/div[2]/app-customer-record[1]/div[1]/div[2]/div[1]/app-prescriptions[1]/div[1]/div[1]/div[2]/div[1]/app-create[1]/div[1]/div[3]/div[1]/span[1]/mat-select[1]/div[1]/div[2]/div[1]/*[1]\")\n            # dropdown_element = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, dropdown_locator_xpath))\n            # )\n            # dropdown_element.click()\n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"prescription created successfully\")\n            time.sleep(2)\n            login.find_element(By.XPATH, \"//img[@alt='share']\").click()\n    \n            time.sleep(2)\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"prescription message\")\n    \n            login.find_element(\n                By.XPATH, \"(//input[@class='mdc-checkbox__native-control'])[1]\"\n            ).click()\n            login.find_element(By.XPATH, \"//span[normalize-space()='Whatsapp']\").click()\n            login.find_element(By.XPATH, \"//button[@type='button'][normalize-space()='Share']\").click()\n            login.find_element(\n                By.XPATH, \"//textarea[@placeholder='Enter message description']\"\n            ).send_keys(\"Prescription Message to Patient\")\n    \n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            print(\"Prescription Shared Successfully\")\n    \n            # ************************* Case Creation and Sharing *********************\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Patient Record']\"))\n            ).click()\n    \n            login.implicitly_wait(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='+ Create Case']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Case Description']\")\n                )\n            ).send_keys(\"test case for case\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder = 'Enter Chief Complaint']\")\n                )\n            ).send_keys(\"Fever\")\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='History']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder ='Enter History']\"))\n            ).send_keys(\"viral fever\",Keys.RETURN)\n    \n            element = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", element)\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Medication']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Enter Medication']\"))\n            ).send_keys(\"no medication\",Keys.RETURN)\n    \n            time.sleep(1)\n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].click();\", element)\n    \n    \n            # time.sleep(2)\n            # toast_message = WebDriverWait(login, 10).until(\n            #     EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            # )\n            # message = toast_message.text\n            # print(\"Toast Message:\", message)\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Vital Signs']\")\n                )\n            ).click()\n    \n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Pulse Rate , Max : 999']\"\n            ).send_keys(\"560\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Respiration , Max : 90']\"\n            ).send_keys(\"62\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Temperature in °F , Max : 200']\"\n            ).send_keys(\"123\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Systolic , Max : 500']\"\n            ).send_keys(\"264\")\n            login.find_element(\n                By.XPATH, \"//input[@placeholder='Enter Diastolic , Max : 500']\"\n            ).send_keys(\"287\")\n    \n            element = login.find_element(By.XPATH, \"//button[normalize-space()='Save']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            # login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Treatment Plan']\"))\n            ).click()\n    \n    \n            treat_name = \"Treatment\" + str(uuid.uuid4())[:4]\n            treat_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@role='searchbox']\"))\n            )\n            treat_namebox.clear()\n            treat_namebox.send_keys(treat_name)\n    \n    \n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='p-multiselect-label p-placeholder']\"))\n            ).click()\n    \n    \n            dropdown_xpath = \"//span[normalize-space()='Naveen KP']\"\n            element = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element)\n            element.click()\n    \n            time.sleep(3)\n    \n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-white shadow fw-bold']\"))\n            ).click()\n    \n            step_name = \"Step\" + str(uuid.uuid1())[:1]\n            step_namebox = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//input[@placeholder='Enter Name']\"))\n            )\n            step_namebox.clear()\n            step_namebox.send_keys(step_name)\n    \n    \n            WebDriverWait(login, 10).until(\n               EC.presence_of_element_located(\n                   (By.XPATH, \"//p-multiselect[@optionlabel='firstName']//span[@class='p-multiselect-trigger-icon fa fa-caret-down ng-star-inserted']\"))\n           ).click()\n    \n            time.sleep(2)\n            element1 = login.find_element(By.XPATH, dropdown_xpath)\n            login.execute_script(\"arguments[0].scrollIntoView();\", element1)\n            element1.click()\n    \n            time.sleep(3)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='d-flex']//span[@class='p-dropdown-trigger-icon fa fa-caret-down ng-star-inserted']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='In Progress']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Step Notes']\"))\n            ).send_keys(\"Steps for notes\")\n    \n            WebDriverWait(login, 10).until(\n            EC.element_to_be_clickable(\n                (By.XPATH, \"//label[@for='treatmentPlanAattachments']\")\n            )\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter Treatment Notes']\"))\n            ).send_keys(\"Note for the treatment\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Save']\"))\n            ).click()\n    \n    \n    \n            element2 = login.find_element(By.XPATH, \"//span[normalize-space()='Add the sections you need for this medical record']\")\n            login.execute_script(\"arguments[0].scrollIntoView();\", element2)\n            element2.click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Prescription']\")\n                )\n            ).click()\n    \n            for i in range(5):\n                login.find_element(\n                    By.XPATH, \"//button[normalize-space()='+ Add Medicine']\"\n                ).click()\n                login.find_element(By.XPATH, \"//input[@role='searchbox']\").send_keys(\n                    \"Medicine\"\n                )\n    \n                before_XPath = \"//*[contains(@id, 'pr_id')]/tbody/tr\"\n                aftertd_XPath_1 = \"/td[2]\"\n                aftertd_XPath_2 = \"/td[3]\"\n                aftertd_XPath_3 = \"/td[4]\"\n                aftertd_XPath_4 = \"/td[5]\"\n                textarea_xpath = \"//input[@role='searchbox']\"\n                row = i + 1\n                if i > 0:\n                    trXPath = before_XPath + str([row])\n                else:\n                    trXPath = before_XPath\n    \n                PreFinalXPath = trXPath + aftertd_XPath_1\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Dose = login.find_element(By.XPATH, PreFinalXPath)\n                Dose.click()\n                Dose1 = login.find_element(By.XPATH, FinalXPath)\n                Dose1.send_keys(\"650 mg\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_2\n                FinalXPath = PreFinalXPath + textarea_xpath\n    \n                Frequency = login.find_element(By.XPATH, PreFinalXPath)\n                Frequency.click()\n                Frequency1 = login.find_element(By.XPATH, FinalXPath)\n                Frequency1.send_keys(\"1-1-1\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_3\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Duration = login.find_element(By.XPATH, PreFinalXPath)\n                Duration.click()\n                Duration1 = login.find_element(By.XPATH, FinalXPath)\n                Duration1.send_keys(\"5 Days\")\n    \n                PreFinalXPath = trXPath + aftertd_XPath_4\n                FinalXPath = PreFinalXPath + textarea_xpath\n                Notes = login.find_element(By.XPATH, PreFinalXPath)\n                Notes.click()\n                Notes1 = login.find_element(By.XPATH, FinalXPath)\n                Notes1.send_keys(\"After Food\")\n    \n    \n    \n            dropdown_element= WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//mat-select[@aria-haspopup='listbox']\"))\n            )\n            dropdown_element.click()\n    \n            time.sleep(3)\n            element3 = login.find_element(By.XPATH, \"//span[@class='mdc-list-item__primary-text']//div[contains(text(),'Naveen KP')]\")\n            login.execute_script(\"arguments[0].click();\", element3)\n    \n    \n    \n            time.sleep(2)\n            login.find_element(By.XPATH, \"//button[normalize-space()='Save']\").click()\n    \n            time.sleep(2)\n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//a[@class='add-action-btn']\"))\n            ).click()\n    \n            time.sleep(3)\n            # Get the current working directory\n            current_working_directory = os.getcwd()\n    \n            # Construct the absolute path\n            absolute_path = os.path.abspath(\n                os.path.join(current_working_directory, r\"Extras\\test.png\")\n            )\n            pyautogui.write(absolute_path)\n            pyautogui.press(\"enter\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//textarea[@placeholder='Enter message description']\")\n                )\n            ).send_keys(\"case sharing testing\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Email')]\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Whatsapp')]\"))\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(),'Share')]\")\n                )\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n            # print(\"Case file Shared successfully\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//i[@class='pi pi-arrow-left back-btn-arrow']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            time.sleep(3)\n    \n        # #####************************* Auto Invoice and Sharing ************************#######\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='View Invoice']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Auto Invoice\")\n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            ).click()\n    \n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"1\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(4)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Pay by Cash']\"))\n            ).click()\n    \n            pay_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Pay']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", pay_button)\n    \n            yes_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Yes']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", yes_button)\n    \n            time.sleep(2)\n            wait_and_locate_click(login, By.XPATH, \"(//i[@class='fa fa-arrow-left'])[1]\")\n            time.sleep(2)\n    \n            # login.find_element(By.XPATH, \"(//span[@class='fa fa-arrow-left pointer-cursor'])[1]\").click()\n    \n            # time.sleep(3)\n            # while True:\n            #     try:\n            #         # Attempt to locate the \"Next\" button using the button's class\n            #         next_button = WebDriverWait(login, 10).until(\n            #             EC.presence_of_element_located(\n            #                 (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n            #             )\n            #         )\n    \n            #         # Check if the button is enabled (i.e., not disabled)\n            #         if next_button.is_enabled():\n            #             # print(\"Next button found and clickable.\")\n            #             # Click using JavaScript to avoid interception issues\n            #             login.execute_script(\"arguments[0].click();\", next_button)\n            #         else:\n            #             # print(\"Next button is disabled. Reached the last page.\")\n            #             break\n    \n            #     except Exception as e:\n            #         # # If no next button is found or any other exception occurs, exit the loop\n            #         # print(\"End of pages or error encountered:\", e)\n            #         break\n    \n            # # After clicking through all pages, locate and click the last accordion\n            # time.sleep(1)\n            # last_element_in_accordian = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            # )\n            # last_element_in_accordian.click()\n    \n            # time.sleep(3)\n            # View_Detail_button = WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n            #     )\n            # )\n            # View_Detail_button.click()\n    \n    \n    \n            # ********************** Manual Invoice and Sharing ***********************\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//button[normalize-space()='New Invoice'])[1]\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\")\n                )\n            ).click()\n    \n            time.sleep(1)\n            WebDriverWait(login, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                        By.XPATH,\n                        \"//div[@class='item-name'][normalize-space()='Naveen Consultation']\",\n                    )\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//button[@class='cs-btn bt1 ml-0'][normalize-space()='Add']\",\n                    )\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Update']\")\n                )\n            ).click()\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n            print(\"Manual Invoice\")\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Edit']\"))\n            ).click()\n    \n            time.sleep(2)\n    \n            add_service = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            )\n            login.execute_script(\"arguments[0].click();\", add_service)\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[normalize-space()='Naveen Consultation 1']\"))\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added Sub Service to the Invoice\")\n    \n            time.sleep(2)\n            # WebDriverWait(login, 10).until(\n            #     EC.presence_of_element_located(\n            #         (By.XPATH, \"//button[normalize-space()='Add Procedure/Item']\"))\n            # ).click()\n            login.execute_script(\"arguments[0].click();\", add_service)\n            item_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//input[@placeholder='Choose Procedure/Item']\"))\n            )\n            item_button.click()\n            item_button.send_keys(\"item1234\")\n    \n            time.sleep(3)\n            price = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"(//input[@id='mat-input-4'])[2]\"))\n            )\n            price.clear()\n            price.click()\n            price.send_keys(\"102\")\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Add']\"))\n            ).click()\n            print(\"Added ADHOC item to the Invoice\")\n    \n            time.sleep(3)\n            update_button = WebDriverWait(login, 10).until(\n            EC.presence_of_element_located(\n                (By.XPATH, \"//button[normalize-space()='Update']\"))\n            )\n            login.execute_script(\"arguments[0].scrollIntoView();\", update_button)\n            update_button.click()\n    \n    \n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            time.sleep(5)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Get Payment']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Share Payment Link']\")\n                )\n            ).click()\n    \n            time.sleep(2)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Send']\")\n                )\n            ).click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n    \n            time.sleep(3)\n        #     # print(\"Successfully send the Payment Link to the patient\")\n    \n            login.find_element(By.XPATH, \"//i[@class='fa fa-arrow-left']\").click()\n    \n            while True:\n                try:\n                    # Attempt to locate the \"Next\" button using the button's class\n                    next_button = WebDriverWait(login, 10).until(\n                        EC.presence_of_element_located(\n                            (By.XPATH, \"//button[contains(@class, 'p-paginator-next')]\")\n                        )\n                    )\n    \n                    # Check if the button is enabled (i.e., not disabled)\n                    if next_button.is_enabled():\n                        # print(\"Next button found and clickable.\")\n                        # Click using JavaScript to avoid interception issues\n                        login.execute_script(\"arguments[0].click();\", next_button)\n                    else:\n                        # print(\"Next button is disabled. Reached the last page.\")\n                        break\n    \n                except Exception as e:\n                    # # If no next button is found or any other exception occurs, exit the loop\n                    # print(\"End of pages or error encountered:\", e)\n                    break\n    \n            # After clicking through all pages, locate and click the last accordion\n            time.sleep(1)\n            last_element_in_accordian = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\"))\n            )\n            last_element_in_accordian.click()\n    \n            time.sleep(3)\n            # print(\"Before clicking View Details button\")\n            View_Detail_button = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[contains(text(), 'View Details')]\")\n                )\n            )\n            View_Detail_button.click()\n    \n            # *************************** Reschedule **********************\n    \n            time.sleep(3)\n            login.find_element(By.XPATH, \"//button[contains(text(),'Reschedule')]\").click()\n            time.sleep(2)\n            WebDriverWait(login, 20).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[@class='reschedule-date-picker']\")\n                )\n            ).click()\n    \n            today_date = datetime.now()\n            print(today_date.day)\n            today_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                today_date.day\n            )\n            print(today_xpath_expression)\n            tomorrow_date = today_date + timedelta(days=1)\n            print(tomorrow_date.day)\n    #===============================================================\n            # current_month = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-month')]\"))\n            # )\n    \n            # current_year = WebDriverWait(login, 10).until(\n            # EC.presence_of_element_located(\n            #     (By.XPATH, \"//button[contains(@class, 'p-datepicker-year')]\"))\n            # )\n    \n            # if current_month.text.lower() != tomorrow_date.strftime(\"%b\").lower() or current_year.text.lower() != tomorrow_date.strftime(\"%Y\").lower():\n    \n            #     login.find_element(By.XPATH, \"//button[contains(@class, 'p-datepicker-next')]\").click()\n    #===============================================================\n            tomorrow_xpath_expression = \"//span[@class='example-custom-date-class d-pad-15 ng-star-inserted'][normalize-space()='{}']\".format(\n                tomorrow_date.day\n            )\n            print(tomorrow_xpath_expression)\n    \n            Tomorrow_Date = WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, tomorrow_xpath_expression))\n            )\n            Tomorrow_Date.click()\n            print(\"Tomorrow Date:\", Tomorrow_Date.text)\n    \n            wait = WebDriverWait(login, 10)\n            time_slot = wait.until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[@aria-selected= 'false']\"))\n            )\n            time_slot.click()\n            print(\"Time Slot:\", time_slot.text)\n    \n            reschedule_button = WebDriverWait(login, 30).until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//button[@class='btn btn-primary reschedule-btn']\")\n                )\n            )\n            reschedule_button.click()\n    \n            try:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarnormal\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n    \n            except:\n    \n                snack_bar = WebDriverWait(login, 10).until(\n                    EC.visibility_of_element_located((By.CLASS_NAME, \"snackbarerror\"))\n                )\n                message = snack_bar.text\n                print(\"Snack bar message:\", message)\n            # print(\"Reschedule Successfully\")\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[@class='fa fa-arrow-left pointer-cursor']\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'Today')]\")\n                )\n            ).click()\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[normalize-space()='Future']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            last_accordian = WebDriverWait(login, 15).until(\n                EC.presence_of_element_located(\n                    (\n                        By.XPATH,\n                        \"//div[contains(@class, 'card my-1 p-0 ng-star-inserted')][last()]\",\n                    )\n                )\n            )\n            last_accordian.click()\n    \n            # *******************Cancellation **********************\n    \n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//button[normalize-space()='Change Status']\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//div[contains(text(),'Cancel')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located(\n                    (By.XPATH, \"//span[contains(text(),'No Show Up')]\")\n                )\n            ).click()\n    \n            time.sleep(3)\n            WebDriverWait(login, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//span[normalize-space()='Ok']\"))\n            ).click()\n    \n            toast_message = WebDriverWait(login, 10).until(\n                EC.visibility_of_element_located((By.CLASS_NAME, \"p-toast-detail\"))\n            )\n            message = toast_message.text\n            print(\"Toast Message:\", message)\n    \n    \n    \n    \n    \n    \n        except Exception as e:\n            allure.attach(  # use Allure package, .attach() method, pass 3 params\n                login.get_screenshot_as_png(),  # param1\n                # login.screenshot()\n                name=\"full_page\",  # param2\n                attachment_type=AttachmentType.PNG,\n            )\n>           raise e\n\nSelenium Project\\Deployment\\Pre_Deployment\\Pre Deployment_Walkin_Appointment_test.py:4401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nSelenium Project\\Deployment\\Pre_Deployment\\Pre Deployment_Walkin_Appointment_test.py:4236: in test_walkin_appointment\n    last_element_in_accordian = WebDriverWait(login, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"62239efe39c1b20bc55426c9e4ec56ff\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000213E821FBA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff705b9fc95+79861]\nE       \tGetHandleVerifier [0x0x7ff705b9fcf0+79952]\nE       \t(No symbol) [0x0x7ff70591cada]\nE       \t(No symbol) [0x0x7ff705974457]\nE       \t(No symbol) [0x0x7ff70597471c]\nE       \t(No symbol) [0x0x7ff7059c8217]\nE       \t(No symbol) [0x0x7ff70599cb1f]\nE       \t(No symbol) [0x0x7ff7059c4f8b]\nE       \t(No symbol) [0x0x7ff70599c8b3]\nE       \t(No symbol) [0x0x7ff705965272]\nE       \t(No symbol) [0x0x7ff705966043]\nE       \tGetHandleVerifier [0x0x7ff705e5b9cd+2946349]\nE       \tGetHandleVerifier [0x0x7ff705e55c4a+2922410]\nE       \tGetHandleVerifier [0x0x7ff705e759d7+3052855]\nE       \tGetHandleVerifier [0x0x7ff705bbaa7e+189918]\nE       \tGetHandleVerifier [0x0x7ff705bc2a1f+222591]\nE       \tGetHandleVerifier [0x0x7ff705ba8ab4+116244]\nE       \tGetHandleVerifier [0x0x7ff705ba8c69+116681]\nE       \tGetHandleVerifier [0x0x7ff705b8f048+11176]\nE       \tBaseThreadInitThunk [0x0x7ff8bbcee8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff8bc8e8d9c+44]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"502114222c482b27","name":"full_page","source":"502114222c482b27.png","type":"image/png","size":136126},{"uid":"3db0014897478d91","name":"stdout","source":"3db0014897478d91.txt","type":"text/plain","size":2958}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login::0","time":{"start":1757674434332,"stop":1757674437212,"duration":2880},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"severity","value":"critical"},{"name":"parentSuite","value":"Selenium Project.Deployment.Pre_Deployment"},{"name":"suite","value":"Pre Deployment_Walkin_Appointment_test"},{"name":"host","value":"DESKTOP-MDBDRNS"},{"name":"thread","value":"12524-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Selenium Project.Deployment.Pre_Deployment.Pre Deployment_Walkin_Appointment_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'Jaldee01'"},{"name":"url","value":"'https://scale.jaldee.com/business/'"},{"name":"username","value":"'5555556030'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9b7b87c836686209.json","parameterValues":["'Jaldee01'","'https://scale.jaldee.com/business/'","'5555556030'"]}